{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Avg4k Menu Lua }Avg4k Menu Lua}
{\comment Generated by doxygen 1.10.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Avg4k Menu Lua}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b E:/A4k-Lua-API/Functions/{\b FCharts.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FData.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FFiles.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FGame.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FGameplay.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FMenu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FSkins.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Functions/{\b FSteam.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Stubs/{\b LuaMenu.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Stubs/{\b LuaNote.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Stubs/{\b LuaSong.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Stubs/{\b LuaSprite.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b E:/A4k-Lua-API/Stubs/{\b LuaText.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FCharts.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FCharts.h}
{\xe \v E:/A4k-Lua-API/Functions/FCharts.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_CHARTS_H}\par
7 {\cf21 #define AVG4K_F_CHARTS_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 \par
13 {\cf21 #include "../AvgLuaFile.h"}\par
14 {\cf21 #include "../Stubs/LuaSong.h"}\par
15 {\cf21 #include "../Stubs/LuaSprite.h"}\par
16 \par
17 {\cf17 namespace }Average4k::Api::Functions\par
18 \{\par
19     {\cf17 class }FCharts \{\par
20     {\cf17 public}:\par
24         {\cf17 static} {\cf18 void} ScanCharts();\par
29         {\cf17 static} sol::table GetPacks();\par
35         {\cf17 static} sol::table GetCharts(std::wstring pack);\par
40         {\cf17 static} {\cf18 void} LoadChart(std::wstring path);\par
46         {\cf17 static} {\cf18 int} LoadAsyncTexture(std::wstring path);\par
52         {\cf17 static} {\cf18 void} LoadAsyncAudio(std::string name, std::string path);\par
56         {\cf17 static} {\cf18 void} ClearAudio();\par
61         {\cf17 static} Average4k::Api::Stubs::LuaSong GetAsyncAudio();\par
67         {\cf17 static} Average4k::Api::Stubs::LuaSprite GetAsyncTexture({\cf18 int} {\cf18 id});\par
72         {\cf17 static} sol::table CheckChart();\par
76         {\cf17 static} {\cf18 void} ClearAsync();\par
77 \par
78     \};\par
79 \}\par
80 \par
81 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FData.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FData.h}
{\xe \v E:/A4k-Lua-API/Functions/FData.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_DATA_H}\par
7 {\cf21 #define AVG4K_F_DATA_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include "FCharts.h"}\par
12 \par
13 {\cf17 namespace }Average4k::Api::Functions\par
14 \{\par
15     {\cf17 class }FData \{\par
16     {\cf17 public}:\par
21         {\cf17 static} sol::table GetSkinData();\par
26         {\cf17 static} {\cf18 void} SetSkinData(sol::table data);\par
31         {\cf17 static} sol::table GetKeybindData();\par
36         {\cf17 static} {\cf18 void} SetKeybindData(sol::table data);\par
41         {\cf17 static} sol::table GetGameplayData();\par
46         {\cf17 static} {\cf18 void} SetGameplayData(sol::table data);\par
51         {\cf17 static} sol::table GetVideoData();\par
56         {\cf17 static} {\cf18 void} SetVideoData(sol::table data);\par
61         {\cf17 static} sol::table GetAudioData();\par
66         {\cf17 static} {\cf18 void} SetAudioData(sol::table data);\par
67 \par
72         {\cf17 static} {\cf18 void} SetSkin(std::string skinName);\par
73     \};\par
74 \}\par
75 \par
76 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FFiles.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FFiles.h}
{\xe \v E:/A4k-Lua-API/Functions/FFiles.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_FILES_H}\par
7 {\cf21 #define AVG4K_F_FILES_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 \par
13 {\cf17 namespace }Average4k::Api::Functions\par
14 \{\par
15     {\cf17 class }FFiles \{\par
16     {\cf17 public}:\par
22         {\cf17 static} std::string GetFileFromUser(std::string filters);\par
27         {\cf17 static} std::string GetFolderFromUser();\par
28     \};\par
29 \}\par
30 \par
31 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FGame.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FGame.h}
{\xe \v E:/A4k-Lua-API/Functions/FGame.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_GAME_H}\par
7 {\cf21 #define AVG4K_F_GAME_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 \par
13 {\cf17 namespace }Average4k::Api::Functions\par
14 \{\par
15     {\cf17 class }FGame \{\par
16     {\cf17 public}:\par
20         {\cf17 static} {\cf18 void} Quit();\par
24         {\cf17 static} {\cf18 float} GetWidthScale();\par
28         {\cf17 static} {\cf18 float} GetHeightScale();\par
33         {\cf17 static} {\cf18 void} FadeOutSong({\cf18 bool} fade);\par
39         {\cf17 static} {\cf18 void} PlayChart(std::wstring path, {\cf18 int} diff);\par
40     \};\par
41 \}\par
42 \par
43 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FGameplay.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FGameplay.h}
{\xe \v E:/A4k-Lua-API/Functions/FGameplay.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_GAMEPLAY_H}\par
7 {\cf21 #define AVG4K_F_GAMEPLAY_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 \par
13 {\cf17 namespace }Average4k::Api::Functions\par
14 \{\par
15     {\cf17 class }FGameplay \{\par
16     {\cf17 public}:\par
21         {\cf17 static} {\cf18 void} RotateReceptors({\cf18 bool} rotate);\par
27         {\cf17 static} {\cf18 void} SetNoteSize({\cf18 float} width, {\cf18 float} height);\par
28     \};\par
29 \}\par
30 \par
31 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FMenu.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FMenu.h}
{\xe \v E:/A4k-Lua-API/Functions/FMenu.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_MENU_H}\par
7 {\cf21 #define AVG4K_F_MENU_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 {\cf21 #include "../Stubs/LuaMenu.h"}\par
13 \par
14 {\cf17 namespace }Average4k::Api::Functions\par
15 \{\par
16     {\cf17 class }FMenu \{\par
17     {\cf17 public}:\par
21         {\cf17 static} Stubs::LuaMenu* CurrentMenu;\par
22 \par
27         {\cf17 static} {\cf18 void} SwitchTo(std::string path);\par
28     \};\par
29 \}\par
30 \par
31 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FSkins.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FSkins.h}
{\xe \v E:/A4k-Lua-API/Functions/FSkins.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_SKINS_H}\par
7 {\cf21 #define AVG4K_F_SKINS_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include "FCharts.h"}\par
12 \par
13 {\cf17 namespace }Average4k::Api::Functions\par
14 \{\par
15     {\cf17 class }FSkins \{\par
16     {\cf17 public}:\par
21         {\cf17 static} sol::table GetSkins();\par
26         {\cf17 static} sol::table GetNoteskins();\par
27     \};\par
28 \}\par
29 \par
30 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FSteam.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Functions/FSteam.h}
{\xe \v E:/A4k-Lua-API/Functions/FSteam.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_F_STEAM_H}\par
7 {\cf21 #define AVG4K_F_STEAM_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <string>}\par
12 {\cf21 #include <vector>}\par
13 {\cf21 #include "FData.h"}\par
14 \par
15 {\cf17 namespace }Average4k::Api::Functions\par
16 \{\par
17     {\cf17 class }FSteam \{\par
18     {\cf17 public}:\par
23         {\cf17 static} {\cf18 bool} IsSteamRunning();\par
27         {\cf17 static} {\cf18 void} CreateItem();\par
28         \par
37         {\cf17 static} {\cf18 void} UploadPack(std::string folder, std::string banner, std::string title, std::string description, sol::table tags);\par
38 \par
48         {\cf17 static} {\cf18 void} UploadNoteskin(std::string folder, std::string banner, std::string title, std::string description, sol::table previewPictures, sol::table tags);\par
49 \par
59         {\cf17 static} {\cf18 void} UploadTheme(std::string folder, std::string banner, std::string title, std::string description, sol::table previewPictures, sol::table tags);\par
60 \par
64         {\cf17 static} {\cf18 void} DeleteItem();\par
65 \par
70         {\cf17 static} {\cf18 float} GetCurrentItemProgress();\par
71 \par
75         {\cf17 static} {\cf18 void} OpenWorkshop();\par
76 \par
81         {\cf17 static} std::string GetSteamName();\par
82     \};\par
83 \}\par
84 \par
85 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LuaMenu.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Stubs/LuaMenu.h}
{\xe \v E:/A4k-Lua-API/Stubs/LuaMenu.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_LUA_MENU_H}\par
7 {\cf21 #define AVG4K_LUA_MENU_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 {\cf21 #include <AvgEngine/Base/Menu.h>}\par
11 \par
12 {\cf21 #include "LuaObject.h"}\par
13 {\cf21 #include "../AvgLuaFile.h"}\par
14 \par
15 {\cf21 #define SOL_USE_LUA_HPP}\par
16 {\cf21 #include <sol/sol.hpp>}\par
17 \par
18 {\cf17 namespace }Average4k::Api::Stubs\par
19 \{\par
20 \par
21     {\cf17 class }LuaMenu \{\par
22         AvgEngine::Base::Menu* _base;\par
23     {\cf17 public}:\par
28         {\cf18 void} addObject(LuaObject obj)\par
29         \{\par
30             {\cf19 if} (obj._baseObject == {\cf17 nullptr})\par
31             \{\par
32                 AvgEngine::Logging::writeLog({\cf22 "[LuaMenu] You cannot add an object that has already been destroyed."});\par
33                 {\cf19 return};\par
34             \}\par
35             _base->addObject(obj._baseObject);\par
36 \par
37             AvgLuaFile::objects.push_back(obj._baseObject);\par
38         \}\par
39 \par
44         {\cf18 void} removeObject(LuaObject obj)\par
45         \{\par
46             _base->removeObject(obj._baseObject);\par
47 \par
48             AvgLuaFile::objects.erase(std::remove(AvgLuaFile::objects.begin(), AvgLuaFile::objects.end(), obj._baseObject), AvgLuaFile::objects.end());\par
49 \par
50             {\cf17 delete} obj._baseObject;\par
51         \}\par
52 \par
56         {\cf18 void} removeAll()\par
57         \{\par
58             AvgLuaFile::objects.clear();\par
59             _base->removeAll();\par
60         \}\par
61     \};\par
62 \}\par
63 \par
64 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LuaNote.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Stubs/LuaNote.h}
{\xe \v E:/A4k-Lua-API/Stubs/LuaNote.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #pragma once}\par
7 \par
8 {\cf21 #ifndef AVG4K_LUA_NOTE_H}\par
9 {\cf21 #define AVG4K_LUA_NOTE_H}\par
10 \par
11 {\cf21 #include "LuaSprite.h"}\par
12 {\cf21 #include "../../Objects/BaseNote.h"}\par
13 \par
14 {\cf17 namespace }Average4k::Api::Stubs\par
15 \{\par
16     {\cf17 class }LuaNote : {\cf17 public} LuaObject\par
17     \{\par
18     {\cf17 public}:\par
23         {\cf18 void} SetCol({\cf18 int} col)\par
24         \{\par
25             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return};\par
26             _base->sheet_col = col;\par
27         \}\par
28 \par
33         {\cf18 void} SetRow({\cf18 int} row)\par
34         \{\par
35             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return};\par
36             _base->sheet_row = row;\par
37         \}\par
38 \par
43         {\cf18 int} GetCol()\par
44         \{\par
45             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return} 0;\par
46             {\cf19 return} _base->sheet_col;\par
47         \}\par
48 \par
53         {\cf18 int} GetRow()\par
54         \{\par
55             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return} 0;\par
56             {\cf19 return} _base->sheet_row;\par
57         \}\par
58 \par
63         {\cf18 void} SetEndRow({\cf18 int} row)\par
64         \{\par
65             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return};\par
66             _base->sheet_end_row = row;\par
67         \}\par
68 \par
73         {\cf18 void} SetEndCol({\cf18 int} col)\par
74         \{\par
75             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return};\par
76             _base->sheet_end_col = col;\par
77         \}\par
78 \par
83         {\cf18 int} GetEndRow()\par
84         \{\par
85             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return} 0;\par
86             {\cf19 return} _base->sheet_end_row;\par
87         \}\par
88 \par
93         {\cf18 int} GetEndCol()\par
94         \{\par
95             {\cf19 if} (_base == {\cf17 nullptr}) {\cf19 return} 0;\par
96             {\cf19 return} _base->sheet_end_col;\par
97         \}\par
98 \par
103         {\cf18 void} setAngle({\cf18 float} angle)\par
104         \{\par
105             {\cf19 if} (_base == NULL)\par
106                 {\cf19 return};\par
107             _base->transform.angle = angle;\par
108         \}\par
109 \par
114         {\cf18 float} getAngle()\par
115         \{\par
116             {\cf19 if} (_base == NULL)\par
117                 {\cf19 return} 0;\par
118             {\cf19 return} _base->transform.angle;\par
119         \}\par
120 \par
125         {\cf18 void} setR({\cf18 float} r)\par
126         \{\par
127             {\cf19 if} (_base == NULL)\par
128                 {\cf19 return};\par
129             _base->transform.r = r;\par
130         \}\par
131 \par
136         {\cf18 void} setG({\cf18 float} g)\par
137         \{\par
138             {\cf19 if} (_base == NULL)\par
139                 {\cf19 return};\par
140             _base->transform.g = g;\par
141         \}\par
142 \par
147         {\cf18 void} setB({\cf18 float} b)\par
148         \{\par
149             {\cf19 if} (_base == NULL)\par
150                 {\cf19 return};\par
151             _base->transform.b = b;\par
152         \}\par
153 \par
158         {\cf18 void} setA({\cf18 float} a)\par
159         \{\par
160             {\cf19 if} (_base == NULL)\par
161                 {\cf19 return};\par
162             _base->transform.a = a;\par
163         \}\par
164 \par
169         {\cf18 float} getR()\par
170         \{\par
171             {\cf19 if} (_base == NULL)\par
172                 {\cf19 return} 0;\par
173             {\cf19 return} _base->transform.r;\par
174         \}\par
175 \par
176 \par
181         {\cf18 float} getG()\par
182         \{\par
183             {\cf19 if} (_base == NULL)\par
184                 {\cf19 return} 0;\par
185             {\cf19 return} _base->transform.g;\par
186         \}\par
187 \par
192         {\cf18 float} getB()\par
193         \{\par
194             {\cf19 if} (_base == NULL)\par
195                 {\cf19 return} 0;\par
196             {\cf19 return} _base->transform.b;\par
197         \}\par
198 \par
203         {\cf18 float} getA()\par
204         \{\par
205             {\cf19 if} (_base == NULL)\par
206                 {\cf19 return} 0;\par
207             {\cf19 return} _base->transform.a;\par
208         \}\par
209 \par
214         {\cf18 float} getScale()\par
215         \{\par
216             {\cf19 if} (_base == NULL)\par
217                 {\cf19 return} 0;\par
218             {\cf19 return} _base->transform.scale;\par
219         \}\par
220 \par
225         {\cf18 void} setScale({\cf18 float} scale)\par
226         \{\par
227             {\cf19 if} (_base == NULL)\par
228                 {\cf19 return};\par
229             _base->transform.scale = scale;\par
230         \}\par
231 \par
236         {\cf18 void} setZIndex({\cf18 int} index)\par
237         \{\par
238             {\cf19 if} (_base == NULL)\par
239                 {\cf19 return};\par
240             _base->zIndex = index;\par
241         \}\par
242 \par
247         {\cf18 int} getZIndex()\par
248         \{\par
249             {\cf19 if} (_base == NULL)\par
250                 {\cf19 return} 0;\par
251             {\cf19 return} _base->zIndex;\par
252         \}\par
253 \par
258         std::string getTag()\par
259         \{\par
260             {\cf19 if} (_base == NULL)\par
261                 {\cf19 return} {\cf22 ""};\par
262             {\cf19 return} _base->tag;\par
263         \}\par
264 \par
269         {\cf18 void} setTag({\cf17 const} std::string& tag)\par
270         \{\par
271             {\cf19 if} (_base == NULL)\par
272                 {\cf19 return};\par
273             _base->tag = tag;\par
274         \}\par
275 \par
283         {\cf18 void} setSrcRec({\cf18 float} x, {\cf18 float} y, {\cf18 float} w, {\cf18 float} h)\par
284         \{\par
285             {\cf19 if} (_base == NULL)\par
286                 {\cf19 return};\par
287             _base->src.x = x;\par
288             _base->src.y = y;\par
289             _base->src.w = w;\par
290             _base->src.h = h;\par
291         \}\par
292 \par
298         {\cf18 void} addOverlay({\cf18 int} col, {\cf18 int} row)\par
299         \{\par
300             {\cf19 if} (_base == NULL)\par
301                 {\cf19 return};\par
302             _base->overlays = \{ col, row \};\par
303         \}\par
304     \};\par
305 \}\par
306 \par
307 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LuaSong.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Stubs/LuaSong.h}
{\xe \v E:/A4k-Lua-API/Stubs/LuaSong.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_LUA_SONG_H}\par
7 {\cf21 #define AVG4K_LUA_SONG_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #include <AvgEngine/External/Bass/BASS.h>}\par
12 {\cf21 #include "../../A4kGame.h"}\par
13 \par
14 {\cf21 #define SOL_USE_LUA_HPP}\par
15 {\cf21 #include <sol/sol.hpp>}\par
16 \par
17 {\cf17 namespace }Average4k::Api::Stubs\par
18 \{\par
19 \par
20     {\cf17 class }LuaSong \{\par
21         AvgEngine::Audio::Channel* _base;\par
22     {\cf17 public}:\par
23 \par
29         LuaSong(std::string name, std::string audioPath)\par
30         \{\par
31             _base = AvgEngine::External::BASS::CreateChannel(name, A4kGame::gameInstance->skin.GetPath(audioPath), {\cf17 false});\par
32         \}\par
33 \par
37         {\cf18 bool} isValid()\par
38         \{\par
39             {\cf19 return} _base != NULL;\par
40         \}\par
41 \par
46         {\cf18 void} SetLoop({\cf18 bool} loop)\par
47         \{\par
48             {\cf19 if} (_base != NULL)\par
49                 _base->Repeat(loop);\par
50         \}\par
51 \par
56         {\cf18 void} Play({\cf18 bool} restart = {\cf17 false})\par
57         \{\par
58             {\cf19 if} (_base != NULL)\par
59                 _base->Play(restart);\par
60         \}\par
61 \par
65         {\cf18 void} Stop()\par
66         \{\par
67             {\cf19 if} (_base != NULL)\par
68                 _base->Stop();\par
69         \}\par
70 \par
75         {\cf18 void} SetVolume({\cf18 float} volume)\par
76         \{\par
77             {\cf19 if} (_base != NULL)\par
78                 _base->SetVolume(volume);\par
79         \}\par
80 \par
85         {\cf18 float} GetVolume()\par
86         \{\par
87             {\cf19 if} (_base != NULL)\par
88                 {\cf19 return} _base->volume;\par
89             {\cf19 return} 0;\par
90         \par
91         \}\par
92 \par
97         {\cf18 void} SetSpeed({\cf18 float} speed)\par
98         \{\par
99             {\cf19 if} (_base != NULL)\par
100                 _base->RateChange(speed);\par
101         \}\par
102 \par
107         {\cf18 float} GetSpeed()\par
108         \{\par
109             {\cf19 if} (_base != NULL)\par
110                 {\cf19 return} _base->rate;\par
111             {\cf19 return} 0;\par
112         \}\par
113 \par
118         {\cf18 float} GetPosition()\par
119         \{\par
120             {\cf19 if} (_base != NULL)\par
121                 {\cf19 return} _base->GetPos();\par
122             {\cf19 return} 0;\par
123         \}\par
124 \par
129         {\cf18 void} SetPosition({\cf18 float} pos)\par
130         \{\par
131             {\cf19 if} (_base != NULL)\par
132                 _base->SetPos(pos);\par
133         \}\par
134 \par
138         {\cf18 void} Destruct()\par
139         \{\par
140             {\cf19 if} (_base != NULL)\par
141             \{\par
142                 AvgEngine::External::BASS::RemoveChannel(_base->id);\par
143                 {\cf17 delete} _base;\par
144             \}\par
145         \}\par
146     \};\par
147 \}\par
148 \par
149 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LuaSprite.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Stubs/LuaSprite.h}
{\xe \v E:/A4k-Lua-API/Stubs/LuaSprite.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_LUA_SPRITE_H}\par
7 {\cf21 #define AVG4K_LUA_SPRITE_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 {\cf21 #include "../../A4kGame.h"}\par
11 {\cf21 #include "LuaObject.h"}\par
12 {\cf21 #include "AvgEngine/Base/Sprite.h"}\par
13 {\cf21 #include <AvgEngine/Utils/StringTools.h>}\par
14 \par
15 {\cf21 #define SOL_USE_LUA_HPP}\par
16 {\cf21 #include <sol/sol.hpp>}\par
17 \par
18 {\cf17 namespace }Average4k::Api::Stubs\par
19 \{\par
20 \par
21     {\cf17 class }LuaSprite : {\cf17 public} LuaObject \{\par
22         AvgEngine::Base::Sprite* _base;\par
23     {\cf17 public}:\par
30         LuaSprite({\cf18 float} x, {\cf18 float} y, {\cf17 const} std::string& path)\par
31         \{\par
32             std::string formatted = path;\par
33             AvgEngine::Utils::StringTools::ToLower(formatted);\par
34             {\cf19 if} (formatted.contains({\cf22 "charts"}))\par
35                 _base = {\cf17 new} AvgEngine::Base::Sprite(x, y, path);\par
36             {\cf19 else}\par
37                 _base = {\cf17 new} AvgEngine::Base::Sprite(x, y, A4kGame::gameInstance->skin.GetPath(path));\par
38             _base->texture->dontDelete = {\cf17 false};\par
39             _baseObject = _base;\par
40         \}\par
41 \par
46         {\cf18 void} setX({\cf18 float} x)\par
47         \{\par
48             {\cf19 if} (_base == NULL)\par
49                 {\cf19 return};\par
50             _base->transform.x = x;\par
51         \}\par
52 \par
57         {\cf18 float} getX()\par
58         \{\par
59             {\cf19 if} (_base == NULL)\par
60                 {\cf19 return} 0;\par
61             {\cf19 return} _base->transform.x;\par
62         \}\par
63 \par
68         {\cf18 void} setY({\cf18 float} y)\par
69         \{\par
70             {\cf19 if} (_base == NULL)\par
71                 {\cf19 return};\par
72             _base->transform.y = y;\par
73         \}\par
74 \par
79         {\cf18 float} getY()\par
80         \{\par
81             {\cf19 if} (_base == NULL)\par
82                 {\cf19 return} 0;\par
83             {\cf19 return} _base->transform.y;\par
84         \}\par
85 \par
90         {\cf18 void} setWidth({\cf18 int} width)\par
91         \{\par
92             {\cf19 if} (_base == NULL)\par
93                 {\cf19 return};\par
94             _base->transform.w = width;\par
95         \}\par
96 \par
101         {\cf18 int} getWidth()\par
102         \{\par
103             {\cf19 if} (_base == NULL)\par
104                 {\cf19 return} 0;\par
105             {\cf19 return} _base->transform.w;\par
106         \}\par
107 \par
112         {\cf18 void} setHeight({\cf18 int} height)\par
113         \{\par
114             {\cf19 if} (_base == NULL)\par
115                 {\cf19 return};\par
116             _base->transform.h = height;\par
117         \}\par
118 \par
123         {\cf18 int} getHeight()\par
124         \{\par
125             {\cf19 if} (_base == NULL)\par
126                 {\cf19 return} 0;\par
127             {\cf19 return} _base->transform.h;\par
128         \}\par
129 \par
134         {\cf18 void} setAngle({\cf18 float} angle)\par
135         \{\par
136             {\cf19 if} (_base == NULL)\par
137                 {\cf19 return};\par
138             _base->transform.angle = angle;\par
139         \}\par
140 \par
145         {\cf18 float} getAngle()\par
146         \{\par
147             {\cf19 if} (_base == NULL)\par
148                 {\cf19 return} 0;\par
149             {\cf19 return} _base->transform.angle;\par
150         \}\par
151 \par
156         {\cf18 void} setR({\cf18 float} r)\par
157         \{\par
158             {\cf19 if} (_base == NULL)\par
159                 {\cf19 return};\par
160             _base->transform.r = r;\par
161         \}\par
162 \par
167         {\cf18 void} setG({\cf18 float} g)\par
168         \{\par
169             {\cf19 if} (_base == NULL)\par
170                 {\cf19 return};\par
171             _base->transform.g = g;\par
172         \}\par
173 \par
178         {\cf18 void} setB({\cf18 float} b)\par
179         \{\par
180             {\cf19 if} (_base == NULL)\par
181                 {\cf19 return};\par
182             _base->transform.b = b;\par
183         \}\par
184 \par
189         {\cf18 void} setA({\cf18 float} a)\par
190         \{\par
191             {\cf19 if} (_base == NULL)\par
192                 {\cf19 return};\par
193             _base->transform.a = a;\par
194         \}\par
195 \par
200         {\cf18 float} getR()\par
201         \{\par
202             {\cf19 if} (_base == NULL)\par
203                 {\cf19 return} 0;\par
204             {\cf19 return} _base->transform.r;\par
205         \}\par
206 \par
211         {\cf18 float} getG()\par
212         \{\par
213             {\cf19 if} (_base == NULL)\par
214                 {\cf19 return} 0;\par
215             {\cf19 return} _base->transform.g;\par
216         \}\par
217 \par
222         {\cf18 float} getB()\par
223         \{\par
224             {\cf19 if} (_base == NULL)\par
225                 {\cf19 return} 0;\par
226             {\cf19 return} _base->transform.b;\par
227         \}\par
228 \par
233         {\cf18 float} getA()\par
234         \{\par
235             {\cf19 if} (_base == NULL)\par
236                 {\cf19 return} 0;\par
237             {\cf19 return} _base->transform.a;\par
238         \}\par
239 \par
244         {\cf18 float} getScale()\par
245         \{\par
246             {\cf19 if} (_base == NULL)\par
247                 {\cf19 return} 0;\par
248             {\cf19 return} _base->transform.scale;\par
249         \}\par
250 \par
255         {\cf18 void} setScale({\cf18 float} scale)\par
256         \{\par
257             {\cf19 if} (_base == NULL)\par
258                 {\cf19 return};\par
259             _base->transform.scale = scale;\par
260         \}\par
261 \par
266         {\cf18 void} setZIndex({\cf18 int} index)\par
267         \{\par
268             {\cf19 if} (_base == NULL)\par
269                 {\cf19 return};\par
270             _base->zIndex = index;\par
271         \}\par
272 \par
277         {\cf18 int} getZIndex()\par
278         \{\par
279             {\cf19 if} (_base == NULL)\par
280                 {\cf19 return} 0;\par
281             {\cf19 return} _base->zIndex;\par
282         \}\par
283 \par
288         std::string getTag()\par
289         \{\par
290             {\cf19 if} (_base == NULL)\par
291                 {\cf19 return} {\cf22 ""};\par
292             {\cf19 return} _base->tag;\par
293         \}\par
294 \par
299         {\cf18 void} setTag({\cf17 const} std::string& tag)\par
300         \{\par
301             {\cf19 if} (_base == NULL)\par
302                 {\cf19 return};\par
303             _base->tag = tag;\par
304         \}\par
305 \par
310         {\cf18 void} setSrcRec({\cf18 float} x, {\cf18 float} y, {\cf18 float} w, {\cf18 float} h)\par
311         \{\par
312             {\cf19 if} (_base == NULL)\par
313                 {\cf19 return};\par
314             _base->src.x = x;\par
315             _base->src.y = y;\par
316             _base->src.w = w;\par
317             _base->src.h = h;\par
318         \}\par
319     \};\par
320 \}\par
321 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LuaText.h\par \pard\plain 
{\tc\tcl2 \v E:/A4k-Lua-API/Stubs/LuaText.h}
{\xe \v E:/A4k-Lua-API/Stubs/LuaText.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20     Avg Dev Team}\par
3 {\cf20     2021-2024 Average4k}\par
4 {\cf20 */}\par
5 \par
6 {\cf21 #ifndef AVG4K_LUA_TEXT_H}\par
7 {\cf21 #define AVG4K_LUA_TEXT_H}\par
8 \par
9 {\cf21 #pragma once}\par
10 {\cf21 #include "../../A4kGame.h"}\par
11 {\cf21 #include "LuaObject.h"}\par
12 {\cf21 #include "../../Objects/UnicodeText.h"}\par
13 \par
14 {\cf21 #define SOL_NO_EXCEPTIONS 1}\par
15 {\cf21 #define SOL_USE_LUA_HPP}\par
16 {\cf21 #include <sol/sol.hpp>}\par
17 \par
18 {\cf17 namespace }Average4k::Api::Stubs\par
19 \{\par
20     {\cf17 class }LuaText : {\cf17 public} LuaObject \{\par
21         Average4k::Objects::UnicodeText* _base;\par
22         std::string _font;\par
23     {\cf17 public}:\par
32         LuaText({\cf18 float} x, {\cf18 float} y, {\cf17 const} std::string& font, {\cf17 const} std::wstring& text, {\cf18 int} size)\par
33         \{\par
34             _font = _font;\par
35             _base = {\cf17 new} Average4k::Objects::UnicodeText(x, y, A4kGame::gameInstance->skin.GetPath({\cf22 "Fonts/"}), font, text, size);\par
36             _baseObject = _base;\par
37         \}\par
38 \par
43         {\cf18 void} setX({\cf18 float} x)\par
44         \{\par
45             {\cf19 if} (_base == NULL)\par
46                 {\cf19 return};\par
47             _base->transform.x = x;\par
48         \}\par
49 \par
54         {\cf18 float} getX()\par
55         \{\par
56             {\cf19 if} (_base == NULL)\par
57                 {\cf19 return} 0;\par
58             {\cf19 return} _base->transform.x;\par
59         \}\par
60 \par
65         {\cf18 void} setY({\cf18 float} y)\par
66         \{\par
67             {\cf19 if} (_base == NULL)\par
68                 {\cf19 return};\par
69             _base->transform.y = y;\par
70         \}\par
71 \par
76         {\cf18 float} getY()\par
77         \{\par
78             {\cf19 if} (_base == NULL)\par
79                 {\cf19 return} 0;\par
80             {\cf19 return} _base->transform.y;\par
81         \}\par
82 \par
87         {\cf18 void} setText({\cf17 const} std::wstring& text)\par
88         \{\par
89             {\cf19 if} (_base == NULL)\par
90                 {\cf19 return};\par
91             _base->text = text;\par
92         \}\par
93 \par
98         std::wstring getText()\par
99         \{\par
100             {\cf19 if} (_base == NULL)\par
101                 {\cf19 return} L{\cf22 ""};\par
102             {\cf19 return} _base->text;\par
103         \}\par
104 \par
109         {\cf18 void} setFont({\cf17 const} std::string& font)\par
110         \{\par
111             {\cf19 if} (_base == NULL)\par
112                 {\cf19 return};\par
113             _base->SetFont(A4kGame::gameInstance->skin.GetPath({\cf22 "Fonts/"}), font);\par
114             _font = font;\par
115         \}\par
116 \par
121         std::string getFont()\par
122         \{\par
123             {\cf19 if} (_base == NULL)\par
124                 {\cf19 return} {\cf22 ""};\par
125             {\cf19 return} _font;\par
126         \}\par
127 \par
132         {\cf18 void} setSize({\cf18 int} size)\par
133         \{\par
134             {\cf19 if} (_base == NULL)\par
135                 {\cf19 return};\par
136             _base->size = size;\par
137         \}\par
138 \par
143         {\cf18 int} getSize()\par
144         \{\par
145             {\cf19 if} (_base == NULL)\par
146                 {\cf19 return} 0;\par
147             {\cf19 return} _base->size;\par
148         \}\par
149 \par
156         {\cf18 void} setColor({\cf18 int} r, {\cf18 int} g, {\cf18 int} b, {\cf18 float} a)\par
157         \{\par
158             {\cf19 if} (_base == NULL)\par
159                 {\cf19 return};\par
160             _base->transform.r = r;\par
161             _base->transform.g = g;\par
162             _base->transform.b = b;\par
163             _base->transform.a = a;\par
164         \}\par
165 \par
170         {\cf18 int} getWidth()\par
171         \{\par
172             {\cf19 if} (_base == NULL)\par
173                 {\cf19 return} 0;\par
174 \par
175             {\cf19 return} _base->transform.w;\par
176         \}\par
177 \par
182         {\cf18 int} getHeight()\par
183         \{\par
184             {\cf19 if} (_base == NULL)\par
185                 {\cf19 return} 0;\par
186 \par
187             {\cf19 return} _base->transform.h;\par
188         \}\par
189 \par
194         std::string getTag()\par
195         \{\par
196             {\cf19 if} (_base == NULL)\par
197                 {\cf19 return} {\cf22 ""};\par
198             {\cf19 return} _base->tag;\par
199         \}\par
200 \par
205         {\cf18 void} setTag({\cf17 const} std::string& tag)\par
206         \{\par
207             {\cf19 if} (_base == NULL)\par
208                 {\cf19 return};\par
209             _base->tag = tag;\par
210         \}\par
211 \par
216         {\cf18 bool} getCentered()\par
217         \{\par
218             {\cf19 if} (_base == NULL)\par
219                 {\cf19 return} {\cf17 false};\par
220             {\cf19 return} _base->centerLines;\par
221         \}\par
222 \par
227         {\cf18 void} setCentered({\cf18 bool} centered)\par
228         \{\par
229             {\cf19 if} (_base == NULL)\par
230                 {\cf19 return};\par
231             _base->centerLines = centered;\par
232         \}\par
233         \par
234 \par
235     \};\par
236 \}\par
237 \par
238 {\cf21 #endif}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
